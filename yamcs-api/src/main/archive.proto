package archive;
option java_package = "org.yamcs.protobuf";

import "yamcs.proto";
import "commanding.proto";
import "pvalue.proto";

message DumpArchiveRequest {
  // Time specification (assumed Yamcs internal time)
  optional int64 start = 1;
  optional int64 stop = 2;

  //Alternative time specification as UTC strings in ISO8601 format
  optional string utcStart = 9;
  optional string utcStop = 10;

  // At least one of the following request types should be added
  optional yamcs.ParameterReplayRequest parameterRequest = 3;
  optional yamcs.PacketReplayRequest packetRequest = 4;
  optional yamcs.EventReplayRequest eventRequest = 5;
  optional yamcs.CommandHistoryReplayRequest commandHistoryRequest = 6;
  optional yamcs.PpReplayRequest ppRequest = 7;

  // By default the response will be aggregated on the server and only when fully
  // built be sent to the client. This has a limitation of 1MB though.
  // You can circumvent this limitation by enabling the stream-option, see the
  // wiki for more details on this.
  optional bool stream = 8;
}

message DumpArchiveResponse {
  repeated pvalue.ParameterData parameterData = 2;
  repeated yamcs.TmPacketData packetData = 3;
  repeated commanding.CommandHistoryEntry command = 4;
  repeated yamcs.Event event = 5;
  repeated pvalue.ParameterData ppData = 6;
}

message ColumnData {
  optional string name = 1;
  optional yamcs.Value value = 2;
}

message StreamData {
  optional string stream = 1;
  repeated ColumnData column = 2;
}

message TableData {
  message TableRecord {
    repeated ColumnData column = 1;
  }
  repeated TableRecord record = 1;
}

message ColumnInfo {
  optional string name = 1;
  optional string type = 2;
}

message TableInfo {
  optional string name = 1;
  repeated ColumnInfo keyColumn = 2;
  repeated ColumnInfo valueColumn = 3;
}

message StreamInfo {
  optional string name = 1;
  repeated ColumnInfo column = 2;
}
