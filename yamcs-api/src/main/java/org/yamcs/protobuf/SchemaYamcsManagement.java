// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from yamcsManagement.proto

package org.yamcs.protobuf;


public final class SchemaYamcsManagement
{

    public static final class YamcsInstances
    {
        public static final org.yamcs.protobuf.SchemaYamcsManagement.YamcsInstances.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaYamcsManagement.YamcsInstances.MessageSchema();
        public static final org.yamcs.protobuf.SchemaYamcsManagement.YamcsInstances.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaYamcsManagement.YamcsInstances.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.YamcsInstances>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.YamcsInstances message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.YamcsManagement.YamcsInstance instance : message.getInstanceList())
                    output.writeObject(1, instance, org.yamcs.protobuf.SchemaYamcsManagement.YamcsInstance.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.YamcsInstances message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.YamcsInstances.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.YamcsInstances.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.YamcsInstances> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.YamcsInstances.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.YamcsInstances.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.YamcsInstances.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.YamcsInstances message) throws java.io.IOException {}
            public org.yamcs.protobuf.YamcsManagement.YamcsInstances newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.YamcsInstances.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.YamcsInstances.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addInstance(input.mergeObject(org.yamcs.protobuf.YamcsManagement.YamcsInstance.newBuilder(), org.yamcs.protobuf.SchemaYamcsManagement.YamcsInstance.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.YamcsInstances.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.YamcsManagement.YamcsInstances.Builder newMessage()
            {
                return org.yamcs.protobuf.YamcsManagement.YamcsInstances.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.YamcsInstances.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.YamcsInstances.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.YamcsInstances.Builder> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.YamcsInstances.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.YamcsInstances.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.YamcsInstances.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.YamcsInstances.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "instance";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("instance", 1);
        }
    }

    public static final class YamcsInstance
    {
        public static final org.yamcs.protobuf.SchemaYamcsManagement.YamcsInstance.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaYamcsManagement.YamcsInstance.MessageSchema();
        public static final org.yamcs.protobuf.SchemaYamcsManagement.YamcsInstance.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaYamcsManagement.YamcsInstance.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.YamcsInstance>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.YamcsInstance message) throws java.io.IOException
            {
                if(message.hasName())
                    output.writeString(1, message.getName(), false);
                if(message.hasMissionDatabase())
                    output.writeObject(3, message.getMissionDatabase(), org.yamcs.protobuf.SchemaYamcsManagement.MissionDatabase.WRITE, false);

                for(org.yamcs.protobuf.YamcsManagement.ProcessorInfo processor : message.getProcessorList())
                    output.writeObject(4, processor, org.yamcs.protobuf.SchemaYamcsManagement.ProcessorInfo.WRITE, true);

                if(message.hasUrl())
                    output.writeString(5, message.getUrl(), false);
                if(message.hasClientsUrl())
                    output.writeString(6, message.getClientsUrl(), false);
                if(message.hasEventsUrl())
                    output.writeString(7, message.getEventsUrl(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.YamcsInstance message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.YamcsInstance.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.YamcsInstance.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.YamcsInstance> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.YamcsInstance.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.YamcsInstance.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.YamcsInstance.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.YamcsInstance message) throws java.io.IOException {}
            public org.yamcs.protobuf.YamcsManagement.YamcsInstance newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.YamcsInstance.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.YamcsInstance.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setName(input.readString());
                            break;
                        case 3:
                            builder.setMissionDatabase(input.mergeObject(org.yamcs.protobuf.YamcsManagement.MissionDatabase.newBuilder(), org.yamcs.protobuf.SchemaYamcsManagement.MissionDatabase.MERGE));

                            break;
                        case 4:
                            builder.addProcessor(input.mergeObject(org.yamcs.protobuf.YamcsManagement.ProcessorInfo.newBuilder(), org.yamcs.protobuf.SchemaYamcsManagement.ProcessorInfo.MERGE));

                            break;
                        case 5:
                            builder.setUrl(input.readString());
                            break;
                        case 6:
                            builder.setClientsUrl(input.readString());
                            break;
                        case 7:
                            builder.setEventsUrl(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.YamcsInstance.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.YamcsManagement.YamcsInstance.Builder newMessage()
            {
                return org.yamcs.protobuf.YamcsManagement.YamcsInstance.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.YamcsInstance.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.YamcsInstance.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.YamcsInstance.Builder> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.YamcsInstance.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.YamcsInstance.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.YamcsInstance.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.YamcsInstance.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "name";
                case 3: return "missionDatabase";
                case 4: return "processor";
                case 5: return "url";
                case 6: return "clientsUrl";
                case 7: return "eventsUrl";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("name", 1);
            fieldMap.put("missionDatabase", 3);
            fieldMap.put("processor", 4);
            fieldMap.put("url", 5);
            fieldMap.put("clientsUrl", 6);
            fieldMap.put("eventsUrl", 7);
        }
    }

    public static final class HistoryInfo
    {
        public static final org.yamcs.protobuf.SchemaYamcsManagement.HistoryInfo.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaYamcsManagement.HistoryInfo.MessageSchema();
        public static final org.yamcs.protobuf.SchemaYamcsManagement.HistoryInfo.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaYamcsManagement.HistoryInfo.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.HistoryInfo>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.HistoryInfo message) throws java.io.IOException
            {
                if(message.hasVersion())
                    output.writeString(1, message.getVersion(), false);
                if(message.hasDate())
                    output.writeString(2, message.getDate(), false);
                if(message.hasMessage())
                    output.writeString(3, message.getMessage(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.HistoryInfo message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.HistoryInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.HistoryInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.HistoryInfo> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.HistoryInfo.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.HistoryInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.HistoryInfo.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.HistoryInfo message) throws java.io.IOException {}
            public org.yamcs.protobuf.YamcsManagement.HistoryInfo newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.HistoryInfo.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.HistoryInfo.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setVersion(input.readString());
                            break;
                        case 2:
                            builder.setDate(input.readString());
                            break;
                        case 3:
                            builder.setMessage(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.HistoryInfo.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.YamcsManagement.HistoryInfo.Builder newMessage()
            {
                return org.yamcs.protobuf.YamcsManagement.HistoryInfo.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.HistoryInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.HistoryInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.HistoryInfo.Builder> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.HistoryInfo.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.HistoryInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.HistoryInfo.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.HistoryInfo.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "version";
                case 2: return "date";
                case 3: return "message";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("version", 1);
            fieldMap.put("date", 2);
            fieldMap.put("message", 3);
        }
    }

    public static final class SpaceSystemInfo
    {
        public static final org.yamcs.protobuf.SchemaYamcsManagement.SpaceSystemInfo.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaYamcsManagement.SpaceSystemInfo.MessageSchema();
        public static final org.yamcs.protobuf.SchemaYamcsManagement.SpaceSystemInfo.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaYamcsManagement.SpaceSystemInfo.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo message) throws java.io.IOException
            {
                if(message.hasName())
                    output.writeString(1, message.getName(), false);
                if(message.hasQualifiedName())
                    output.writeString(2, message.getQualifiedName(), false);
                if(message.hasShortDescription())
                    output.writeString(3, message.getShortDescription(), false);
                if(message.hasLongDescription())
                    output.writeString(4, message.getLongDescription(), false);
                if(message.hasVersion())
                    output.writeString(5, message.getVersion(), false);
                if(message.hasParameterCount())
                    output.writeInt32(6, message.getParameterCount(), false);
                if(message.hasContainerCount())
                    output.writeInt32(7, message.getContainerCount(), false);
                if(message.hasCommandCount())
                    output.writeInt32(8, message.getCommandCount(), false);
                if(message.hasAlgorithmCount())
                    output.writeInt32(9, message.getAlgorithmCount(), false);
                if(message.hasParametersUrl())
                    output.writeString(10, message.getParametersUrl(), false);
                if(message.hasContainersUrl())
                    output.writeString(11, message.getContainersUrl(), false);
                if(message.hasCommandsUrl())
                    output.writeString(12, message.getCommandsUrl(), false);
                if(message.hasAlgorithmsUrl())
                    output.writeString(13, message.getAlgorithmsUrl(), false);
                for(org.yamcs.protobuf.YamcsManagement.HistoryInfo history : message.getHistoryList())
                    output.writeObject(14, history, org.yamcs.protobuf.SchemaYamcsManagement.HistoryInfo.WRITE, true);

                for(org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo sub : message.getSubList())
                    output.writeObject(15, sub, org.yamcs.protobuf.SchemaYamcsManagement.SpaceSystemInfo.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.SpaceSystemInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.SpaceSystemInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo message) throws java.io.IOException {}
            public org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setName(input.readString());
                            break;
                        case 2:
                            builder.setQualifiedName(input.readString());
                            break;
                        case 3:
                            builder.setShortDescription(input.readString());
                            break;
                        case 4:
                            builder.setLongDescription(input.readString());
                            break;
                        case 5:
                            builder.setVersion(input.readString());
                            break;
                        case 6:
                            builder.setParameterCount(input.readInt32());
                            break;
                        case 7:
                            builder.setContainerCount(input.readInt32());
                            break;
                        case 8:
                            builder.setCommandCount(input.readInt32());
                            break;
                        case 9:
                            builder.setAlgorithmCount(input.readInt32());
                            break;
                        case 10:
                            builder.setParametersUrl(input.readString());
                            break;
                        case 11:
                            builder.setContainersUrl(input.readString());
                            break;
                        case 12:
                            builder.setCommandsUrl(input.readString());
                            break;
                        case 13:
                            builder.setAlgorithmsUrl(input.readString());
                            break;
                        case 14:
                            builder.addHistory(input.mergeObject(org.yamcs.protobuf.YamcsManagement.HistoryInfo.newBuilder(), org.yamcs.protobuf.SchemaYamcsManagement.HistoryInfo.MERGE));

                            break;
                        case 15:
                            builder.addSub(input.mergeObject(org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo.newBuilder(), org.yamcs.protobuf.SchemaYamcsManagement.SpaceSystemInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo.Builder newMessage()
            {
                return org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.SpaceSystemInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.SpaceSystemInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo.Builder> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "name";
                case 2: return "qualifiedName";
                case 3: return "shortDescription";
                case 4: return "longDescription";
                case 5: return "version";
                case 6: return "parameterCount";
                case 7: return "containerCount";
                case 8: return "commandCount";
                case 9: return "algorithmCount";
                case 10: return "parametersUrl";
                case 11: return "containersUrl";
                case 12: return "commandsUrl";
                case 13: return "algorithmsUrl";
                case 14: return "history";
                case 15: return "sub";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("name", 1);
            fieldMap.put("qualifiedName", 2);
            fieldMap.put("shortDescription", 3);
            fieldMap.put("longDescription", 4);
            fieldMap.put("version", 5);
            fieldMap.put("parameterCount", 6);
            fieldMap.put("containerCount", 7);
            fieldMap.put("commandCount", 8);
            fieldMap.put("algorithmCount", 9);
            fieldMap.put("parametersUrl", 10);
            fieldMap.put("containersUrl", 11);
            fieldMap.put("commandsUrl", 12);
            fieldMap.put("algorithmsUrl", 13);
            fieldMap.put("history", 14);
            fieldMap.put("sub", 15);
        }
    }

    public static final class MissionDatabase
    {
        public static final org.yamcs.protobuf.SchemaYamcsManagement.MissionDatabase.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaYamcsManagement.MissionDatabase.MessageSchema();
        public static final org.yamcs.protobuf.SchemaYamcsManagement.MissionDatabase.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaYamcsManagement.MissionDatabase.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.MissionDatabase>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.MissionDatabase message) throws java.io.IOException
            {
                if(message.hasConfigName())
                    output.writeString(1, message.getConfigName(), false);
                if(message.hasName())
                    output.writeString(2, message.getName(), false);
                if(message.hasVersion())
                    output.writeString(3, message.getVersion(), false);
                for(org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo spaceSystem : message.getSpaceSystemList())
                    output.writeObject(4, spaceSystem, org.yamcs.protobuf.SchemaYamcsManagement.SpaceSystemInfo.WRITE, true);

                if(message.hasUrl())
                    output.writeString(5, message.getUrl(), false);
                if(message.hasParametersUrl())
                    output.writeString(6, message.getParametersUrl(), false);
                if(message.hasContainersUrl())
                    output.writeString(7, message.getContainersUrl(), false);
                if(message.hasCommandsUrl())
                    output.writeString(8, message.getCommandsUrl(), false);
                if(message.hasAlgorithmsUrl())
                    output.writeString(9, message.getAlgorithmsUrl(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.MissionDatabase message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.MissionDatabase.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.MissionDatabase.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.MissionDatabase> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.MissionDatabase.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.MissionDatabase.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.MissionDatabase.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.MissionDatabase message) throws java.io.IOException {}
            public org.yamcs.protobuf.YamcsManagement.MissionDatabase newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.MissionDatabase.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.MissionDatabase.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setConfigName(input.readString());
                            break;
                        case 2:
                            builder.setName(input.readString());
                            break;
                        case 3:
                            builder.setVersion(input.readString());
                            break;
                        case 4:
                            builder.addSpaceSystem(input.mergeObject(org.yamcs.protobuf.YamcsManagement.SpaceSystemInfo.newBuilder(), org.yamcs.protobuf.SchemaYamcsManagement.SpaceSystemInfo.MERGE));

                            break;
                        case 5:
                            builder.setUrl(input.readString());
                            break;
                        case 6:
                            builder.setParametersUrl(input.readString());
                            break;
                        case 7:
                            builder.setContainersUrl(input.readString());
                            break;
                        case 8:
                            builder.setCommandsUrl(input.readString());
                            break;
                        case 9:
                            builder.setAlgorithmsUrl(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.MissionDatabase.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.YamcsManagement.MissionDatabase.Builder newMessage()
            {
                return org.yamcs.protobuf.YamcsManagement.MissionDatabase.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.MissionDatabase.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.MissionDatabase.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.MissionDatabase.Builder> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.MissionDatabase.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.MissionDatabase.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.MissionDatabase.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.MissionDatabase.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "configName";
                case 2: return "name";
                case 3: return "version";
                case 4: return "spaceSystem";
                case 5: return "url";
                case 6: return "parametersUrl";
                case 7: return "containersUrl";
                case 8: return "commandsUrl";
                case 9: return "algorithmsUrl";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("configName", 1);
            fieldMap.put("name", 2);
            fieldMap.put("version", 3);
            fieldMap.put("spaceSystem", 4);
            fieldMap.put("url", 5);
            fieldMap.put("parametersUrl", 6);
            fieldMap.put("containersUrl", 7);
            fieldMap.put("commandsUrl", 8);
            fieldMap.put("algorithmsUrl", 9);
        }
    }

    public static final class MissionDatabaseRequest
    {
        public static final org.yamcs.protobuf.SchemaYamcsManagement.MissionDatabaseRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaYamcsManagement.MissionDatabaseRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaYamcsManagement.MissionDatabaseRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaYamcsManagement.MissionDatabaseRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.MissionDatabaseRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.MissionDatabaseRequest message) throws java.io.IOException
            {
                if(message.hasDbConfigName())
                    output.writeString(1, message.getDbConfigName(), false);
                if(message.hasInstance())
                    output.writeString(2, message.getInstance(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.MissionDatabaseRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.MissionDatabaseRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.MissionDatabaseRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.MissionDatabaseRequest> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.MissionDatabaseRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.MissionDatabaseRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.MissionDatabaseRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.MissionDatabaseRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.YamcsManagement.MissionDatabaseRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.MissionDatabaseRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.MissionDatabaseRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setDbConfigName(input.readString());
                            break;
                        case 2:
                            builder.setInstance(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.MissionDatabaseRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.YamcsManagement.MissionDatabaseRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.YamcsManagement.MissionDatabaseRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.MissionDatabaseRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.MissionDatabaseRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.MissionDatabaseRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.MissionDatabaseRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.MissionDatabaseRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.MissionDatabaseRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.MissionDatabaseRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "dbConfigName";
                case 2: return "instance";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("dbConfigName", 1);
            fieldMap.put("instance", 2);
        }
    }

    public static final class ProcessorInfo
    {
        public static final org.yamcs.protobuf.SchemaYamcsManagement.ProcessorInfo.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaYamcsManagement.ProcessorInfo.MessageSchema();
        public static final org.yamcs.protobuf.SchemaYamcsManagement.ProcessorInfo.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaYamcsManagement.ProcessorInfo.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.ProcessorInfo>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.ProcessorInfo message) throws java.io.IOException
            {
                if(message.hasInstance())
                    output.writeString(1, message.getInstance(), false);
                if(message.hasName())
                    output.writeString(2, message.getName(), false);
                if(message.hasType())
                    output.writeString(3, message.getType(), false);
                if(message.hasSpec())
                    output.writeString(4, message.getSpec(), false);
                if(message.hasCreator())
                    output.writeString(5, message.getCreator(), false);
                if(message.hasHasCommanding())
                    output.writeBool(6, message.getHasCommanding(), false);
                if(message.hasState())
                    output.writeString(7, message.getState().name(), false);
                if(message.hasReplayRequest())
                    output.writeObject(8, message.getReplayRequest(), org.yamcs.protobuf.SchemaYamcs.ReplayRequest.WRITE, false);

                if(message.hasReplayState())
                    output.writeString(9, message.getReplayState().name(), false);
                if(message.hasUrl())
                    output.writeString(10, message.getUrl(), false);
                if(message.hasClientsUrl())
                    output.writeString(11, message.getClientsUrl(), false);
                if(message.hasParametersUrl())
                    output.writeString(12, message.getParametersUrl(), false);
                if(message.hasCommandsUrl())
                    output.writeString(13, message.getCommandsUrl(), false);
                if(message.hasCommandQueuesUrl())
                    output.writeString(14, message.getCommandQueuesUrl(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.ProcessorInfo message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.ProcessorInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.ProcessorInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.ProcessorInfo> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.ProcessorInfo.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.ProcessorInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.ProcessorInfo.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.ProcessorInfo message) throws java.io.IOException {}
            public org.yamcs.protobuf.YamcsManagement.ProcessorInfo newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.ProcessorInfo.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.ProcessorInfo.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setInstance(input.readString());
                            break;
                        case 2:
                            builder.setName(input.readString());
                            break;
                        case 3:
                            builder.setType(input.readString());
                            break;
                        case 4:
                            builder.setSpec(input.readString());
                            break;
                        case 5:
                            builder.setCreator(input.readString());
                            break;
                        case 6:
                            builder.setHasCommanding(input.readBool());
                            break;
                        case 7:
                            builder.setState(org.yamcs.protobuf.YamcsManagement.ServiceState.valueOf(input.readString()));
                            break;
                        case 8:
                            builder.setReplayRequest(input.mergeObject(org.yamcs.protobuf.Yamcs.ReplayRequest.newBuilder(), org.yamcs.protobuf.SchemaYamcs.ReplayRequest.MERGE));

                            break;
                        case 9:
                            builder.setReplayState(org.yamcs.protobuf.Yamcs.ReplayStatus.ReplayState.valueOf(input.readString()));
                            break;
                        case 10:
                            builder.setUrl(input.readString());
                            break;
                        case 11:
                            builder.setClientsUrl(input.readString());
                            break;
                        case 12:
                            builder.setParametersUrl(input.readString());
                            break;
                        case 13:
                            builder.setCommandsUrl(input.readString());
                            break;
                        case 14:
                            builder.setCommandQueuesUrl(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.ProcessorInfo.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.YamcsManagement.ProcessorInfo.Builder newMessage()
            {
                return org.yamcs.protobuf.YamcsManagement.ProcessorInfo.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.ProcessorInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.ProcessorInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.ProcessorInfo.Builder> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.ProcessorInfo.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.ProcessorInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.ProcessorInfo.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.ProcessorInfo.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "instance";
                case 2: return "name";
                case 3: return "type";
                case 4: return "spec";
                case 5: return "creator";
                case 6: return "hasCommanding";
                case 7: return "state";
                case 8: return "replayRequest";
                case 9: return "replayState";
                case 10: return "url";
                case 11: return "clientsUrl";
                case 12: return "parametersUrl";
                case 13: return "commandsUrl";
                case 14: return "commandQueuesUrl";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("instance", 1);
            fieldMap.put("name", 2);
            fieldMap.put("type", 3);
            fieldMap.put("spec", 4);
            fieldMap.put("creator", 5);
            fieldMap.put("hasCommanding", 6);
            fieldMap.put("state", 7);
            fieldMap.put("replayRequest", 8);
            fieldMap.put("replayState", 9);
            fieldMap.put("url", 10);
            fieldMap.put("clientsUrl", 11);
            fieldMap.put("parametersUrl", 12);
            fieldMap.put("commandsUrl", 13);
            fieldMap.put("commandQueuesUrl", 14);
        }
    }

    public static final class ClientInfo
    {
        public static final org.yamcs.protobuf.SchemaYamcsManagement.ClientInfo.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaYamcsManagement.ClientInfo.MessageSchema();
        public static final org.yamcs.protobuf.SchemaYamcsManagement.ClientInfo.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaYamcsManagement.ClientInfo.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.ClientInfo>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.ClientInfo message) throws java.io.IOException
            {
                if(message.hasInstance())
                    output.writeString(1, message.getInstance(), false);
                if(message.hasId())
                    output.writeInt32(2, message.getId(), false);
                if(message.hasUsername())
                    output.writeString(3, message.getUsername(), false);
                if(message.hasApplicationName())
                    output.writeString(4, message.getApplicationName(), false);
                if(message.hasProcessorName())
                    output.writeString(5, message.getProcessorName(), false);
                if(message.hasState())
                    output.writeString(6, message.getState().name(), false);
                if(message.hasCurrentClient())
                    output.writeBool(7, message.getCurrentClient(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.ClientInfo message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.ClientInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.ClientInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.ClientInfo> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.ClientInfo.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.ClientInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.ClientInfo.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.ClientInfo message) throws java.io.IOException {}
            public org.yamcs.protobuf.YamcsManagement.ClientInfo newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.ClientInfo.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.ClientInfo.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setInstance(input.readString());
                            break;
                        case 2:
                            builder.setId(input.readInt32());
                            break;
                        case 3:
                            builder.setUsername(input.readString());
                            break;
                        case 4:
                            builder.setApplicationName(input.readString());
                            break;
                        case 5:
                            builder.setProcessorName(input.readString());
                            break;
                        case 6:
                            builder.setState(org.yamcs.protobuf.YamcsManagement.ClientInfo.ClientState.valueOf(input.readString()));
                            break;
                        case 7:
                            builder.setCurrentClient(input.readBool());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.ClientInfo.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.YamcsManagement.ClientInfo.Builder newMessage()
            {
                return org.yamcs.protobuf.YamcsManagement.ClientInfo.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.ClientInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.ClientInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.ClientInfo.Builder> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.ClientInfo.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.ClientInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.ClientInfo.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.ClientInfo.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "instance";
                case 2: return "id";
                case 3: return "username";
                case 4: return "applicationName";
                case 5: return "processorName";
                case 6: return "state";
                case 7: return "currentClient";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("instance", 1);
            fieldMap.put("id", 2);
            fieldMap.put("username", 3);
            fieldMap.put("applicationName", 4);
            fieldMap.put("processorName", 5);
            fieldMap.put("state", 6);
            fieldMap.put("currentClient", 7);
        }
    }

    public static final class UserInfo
    {
        public static final org.yamcs.protobuf.SchemaYamcsManagement.UserInfo.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaYamcsManagement.UserInfo.MessageSchema();
        public static final org.yamcs.protobuf.SchemaYamcsManagement.UserInfo.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaYamcsManagement.UserInfo.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.UserInfo>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.UserInfo message) throws java.io.IOException
            {
                if(message.hasLogin())
                    output.writeString(1, message.getLogin(), false);
                for(org.yamcs.protobuf.YamcsManagement.ClientInfo clientInfo : message.getClientInfoList())
                    output.writeObject(2, clientInfo, org.yamcs.protobuf.SchemaYamcsManagement.ClientInfo.WRITE, true);

                for(String roles : message.getRolesList())
                    output.writeString(3, roles, true);
                for(String tmParaPrivileges : message.getTmParaPrivilegesList())
                    output.writeString(4, tmParaPrivileges, true);
                for(String tmParaSetPrivileges : message.getTmParaSetPrivilegesList())
                    output.writeString(5, tmParaSetPrivileges, true);
                for(String tmPacketPrivileges : message.getTmPacketPrivilegesList())
                    output.writeString(6, tmPacketPrivileges, true);
                for(String tcPrivileges : message.getTcPrivilegesList())
                    output.writeString(7, tcPrivileges, true);
                for(String systemPrivileges : message.getSystemPrivilegesList())
                    output.writeString(8, systemPrivileges, true);
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.UserInfo message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.UserInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.UserInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.UserInfo> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.UserInfo.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.UserInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.UserInfo.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.UserInfo message) throws java.io.IOException {}
            public org.yamcs.protobuf.YamcsManagement.UserInfo newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.UserInfo.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.UserInfo.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setLogin(input.readString());
                            break;
                        case 2:
                            builder.addClientInfo(input.mergeObject(org.yamcs.protobuf.YamcsManagement.ClientInfo.newBuilder(), org.yamcs.protobuf.SchemaYamcsManagement.ClientInfo.MERGE));

                            break;
                        case 3:
                            builder.addRoles(input.readString());
                            break;
                        case 4:
                            builder.addTmParaPrivileges(input.readString());
                            break;
                        case 5:
                            builder.addTmParaSetPrivileges(input.readString());
                            break;
                        case 6:
                            builder.addTmPacketPrivileges(input.readString());
                            break;
                        case 7:
                            builder.addTcPrivileges(input.readString());
                            break;
                        case 8:
                            builder.addSystemPrivileges(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.UserInfo.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.YamcsManagement.UserInfo.Builder newMessage()
            {
                return org.yamcs.protobuf.YamcsManagement.UserInfo.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.UserInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.UserInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.UserInfo.Builder> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.UserInfo.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.UserInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.UserInfo.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.UserInfo.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "login";
                case 2: return "clientInfo";
                case 3: return "roles";
                case 4: return "tmParaPrivileges";
                case 5: return "tmParaSetPrivileges";
                case 6: return "tmPacketPrivileges";
                case 7: return "tcPrivileges";
                case 8: return "systemPrivileges";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("login", 1);
            fieldMap.put("clientInfo", 2);
            fieldMap.put("roles", 3);
            fieldMap.put("tmParaPrivileges", 4);
            fieldMap.put("tmParaSetPrivileges", 5);
            fieldMap.put("tmPacketPrivileges", 6);
            fieldMap.put("tcPrivileges", 7);
            fieldMap.put("systemPrivileges", 8);
        }
    }

    public static final class TmStatistics
    {
        public static final org.yamcs.protobuf.SchemaYamcsManagement.TmStatistics.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaYamcsManagement.TmStatistics.MessageSchema();
        public static final org.yamcs.protobuf.SchemaYamcsManagement.TmStatistics.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaYamcsManagement.TmStatistics.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.TmStatistics>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.TmStatistics message) throws java.io.IOException
            {
                if(message.hasPacketName())
                    output.writeString(1, message.getPacketName(), false);
                if(message.hasReceivedPackets())
                    output.writeInt64(2, message.getReceivedPackets(), false);
                if(message.hasLastReceived())
                    output.writeInt64(3, message.getLastReceived(), false);
                if(message.hasLastPacketTime())
                    output.writeInt64(4, message.getLastPacketTime(), false);
                if(message.hasSubscribedParameterCount())
                    output.writeInt32(6, message.getSubscribedParameterCount(), false);
                if(message.hasLastPacketTimeUTC())
                    output.writeString(7, message.getLastPacketTimeUTC(), false);
                if(message.hasLastReceivedUTC())
                    output.writeString(8, message.getLastReceivedUTC(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.TmStatistics message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.TmStatistics.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.TmStatistics.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.TmStatistics> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.TmStatistics.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.TmStatistics.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.TmStatistics.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.TmStatistics message) throws java.io.IOException {}
            public org.yamcs.protobuf.YamcsManagement.TmStatistics newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.TmStatistics.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.TmStatistics.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setPacketName(input.readString());
                            break;
                        case 2:
                            builder.setReceivedPackets(input.readInt64());
                            break;
                        case 3:
                            builder.setLastReceived(input.readInt64());
                            break;
                        case 4:
                            builder.setLastPacketTime(input.readInt64());
                            break;
                        case 6:
                            builder.setSubscribedParameterCount(input.readInt32());
                            break;
                        case 7:
                            builder.setLastPacketTimeUTC(input.readString());
                            break;
                        case 8:
                            builder.setLastReceivedUTC(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.TmStatistics.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.YamcsManagement.TmStatistics.Builder newMessage()
            {
                return org.yamcs.protobuf.YamcsManagement.TmStatistics.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.TmStatistics.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.TmStatistics.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.TmStatistics.Builder> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.TmStatistics.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.TmStatistics.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.TmStatistics.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.TmStatistics.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "packetName";
                case 2: return "receivedPackets";
                case 3: return "lastReceived";
                case 4: return "lastPacketTime";
                case 6: return "subscribedParameterCount";
                case 7: return "lastPacketTimeUTC";
                case 8: return "lastReceivedUTC";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("packetName", 1);
            fieldMap.put("receivedPackets", 2);
            fieldMap.put("lastReceived", 3);
            fieldMap.put("lastPacketTime", 4);
            fieldMap.put("subscribedParameterCount", 6);
            fieldMap.put("lastPacketTimeUTC", 7);
            fieldMap.put("lastReceivedUTC", 8);
        }
    }

    public static final class Statistics
    {
        public static final org.yamcs.protobuf.SchemaYamcsManagement.Statistics.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaYamcsManagement.Statistics.MessageSchema();
        public static final org.yamcs.protobuf.SchemaYamcsManagement.Statistics.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaYamcsManagement.Statistics.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.Statistics>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.Statistics message) throws java.io.IOException
            {
                if(message.hasInstance())
                    output.writeString(1, message.getInstance(), false);
                if(message.hasYProcessorName())
                    output.writeString(2, message.getYProcessorName(), false);
                for(org.yamcs.protobuf.YamcsManagement.TmStatistics tmstats : message.getTmstatsList())
                    output.writeObject(3, tmstats, org.yamcs.protobuf.SchemaYamcsManagement.TmStatistics.WRITE, true);

                if(message.hasLastUpdated())
                    output.writeInt64(4, message.getLastUpdated(), false);
                if(message.hasLastUpdatedUTC())
                    output.writeString(5, message.getLastUpdatedUTC(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.Statistics message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.Statistics.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.Statistics.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.Statistics> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.Statistics.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.Statistics.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.Statistics.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.Statistics message) throws java.io.IOException {}
            public org.yamcs.protobuf.YamcsManagement.Statistics newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.Statistics.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.Statistics.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setInstance(input.readString());
                            break;
                        case 2:
                            builder.setYProcessorName(input.readString());
                            break;
                        case 3:
                            builder.addTmstats(input.mergeObject(org.yamcs.protobuf.YamcsManagement.TmStatistics.newBuilder(), org.yamcs.protobuf.SchemaYamcsManagement.TmStatistics.MERGE));

                            break;
                        case 4:
                            builder.setLastUpdated(input.readInt64());
                            break;
                        case 5:
                            builder.setLastUpdatedUTC(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.Statistics.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.YamcsManagement.Statistics.Builder newMessage()
            {
                return org.yamcs.protobuf.YamcsManagement.Statistics.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.Statistics.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.Statistics.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.Statistics.Builder> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.Statistics.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.Statistics.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.Statistics.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.Statistics.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "instance";
                case 2: return "yProcessorName";
                case 3: return "tmstats";
                case 4: return "lastUpdated";
                case 5: return "lastUpdatedUTC";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("instance", 1);
            fieldMap.put("yProcessorName", 2);
            fieldMap.put("tmstats", 3);
            fieldMap.put("lastUpdated", 4);
            fieldMap.put("lastUpdatedUTC", 5);
        }
    }

    public static final class ProcessorManagementRequest
    {
        public static final org.yamcs.protobuf.SchemaYamcsManagement.ProcessorManagementRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaYamcsManagement.ProcessorManagementRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaYamcsManagement.ProcessorManagementRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaYamcsManagement.ProcessorManagementRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.ProcessorManagementRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.ProcessorManagementRequest message) throws java.io.IOException
            {
                if(message.hasOperation())
                    output.writeString(1, message.getOperation().name(), false);
                if(message.hasInstance())
                    output.writeString(2, message.getInstance(), false);
                if(message.hasName())
                    output.writeString(3, message.getName(), false);
                if(message.hasType())
                    output.writeString(4, message.getType(), false);
                if(message.hasSpec())
                    output.writeString(5, message.getSpec(), false);
                for(int clientId : message.getClientIdList())
                    output.writeInt32(6, clientId, true);
                if(message.hasPersistent())
                    output.writeBool(7, message.getPersistent(), false);
                if(message.hasReplaySpec())
                    output.writeObject(8, message.getReplaySpec(), org.yamcs.protobuf.SchemaYamcs.ReplayRequest.WRITE, false);

            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.ProcessorManagementRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.ProcessorManagementRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.ProcessorManagementRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.ProcessorManagementRequest> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.ProcessorManagementRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.ProcessorManagementRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.ProcessorManagementRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.ProcessorManagementRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.YamcsManagement.ProcessorManagementRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.ProcessorManagementRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.ProcessorManagementRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setOperation(org.yamcs.protobuf.YamcsManagement.ProcessorManagementRequest.Operation.valueOf(input.readString()));
                            break;
                        case 2:
                            builder.setInstance(input.readString());
                            break;
                        case 3:
                            builder.setName(input.readString());
                            break;
                        case 4:
                            builder.setType(input.readString());
                            break;
                        case 5:
                            builder.setSpec(input.readString());
                            break;
                        case 6:
                            builder.addClientId(input.readInt32());
                            break;
                        case 7:
                            builder.setPersistent(input.readBool());
                            break;
                        case 8:
                            builder.setReplaySpec(input.mergeObject(org.yamcs.protobuf.Yamcs.ReplayRequest.newBuilder(), org.yamcs.protobuf.SchemaYamcs.ReplayRequest.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.ProcessorManagementRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.YamcsManagement.ProcessorManagementRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.YamcsManagement.ProcessorManagementRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.ProcessorManagementRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.ProcessorManagementRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.ProcessorManagementRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.ProcessorManagementRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.ProcessorManagementRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.ProcessorManagementRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.ProcessorManagementRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "operation";
                case 2: return "instance";
                case 3: return "name";
                case 4: return "type";
                case 5: return "spec";
                case 6: return "clientId";
                case 7: return "persistent";
                case 8: return "replaySpec";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("operation", 1);
            fieldMap.put("instance", 2);
            fieldMap.put("name", 3);
            fieldMap.put("type", 4);
            fieldMap.put("spec", 5);
            fieldMap.put("clientId", 6);
            fieldMap.put("persistent", 7);
            fieldMap.put("replaySpec", 8);
        }
    }

    public static final class ProcessorRequest
    {
        public static final org.yamcs.protobuf.SchemaYamcsManagement.ProcessorRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaYamcsManagement.ProcessorRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaYamcsManagement.ProcessorRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaYamcsManagement.ProcessorRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.ProcessorRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.ProcessorRequest message) throws java.io.IOException
            {
                if(message.hasOperation())
                    output.writeString(1, message.getOperation().name(), false);
                if(message.hasInstance())
                    output.writeString(2, message.getInstance(), false);
                if(message.hasName())
                    output.writeString(3, message.getName(), false);
                if(message.hasSeekTime())
                    output.writeInt64(4, message.getSeekTime(), false);
                if(message.hasReplaySpeed())
                    output.writeObject(5, message.getReplaySpeed(), org.yamcs.protobuf.SchemaYamcs.ReplaySpeed.WRITE, false);

            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.ProcessorRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.ProcessorRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.ProcessorRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.ProcessorRequest> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.ProcessorRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.ProcessorRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.ProcessorRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.ProcessorRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.YamcsManagement.ProcessorRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.ProcessorRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.ProcessorRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setOperation(org.yamcs.protobuf.YamcsManagement.ProcessorRequest.Operation.valueOf(input.readString()));
                            break;
                        case 2:
                            builder.setInstance(input.readString());
                            break;
                        case 3:
                            builder.setName(input.readString());
                            break;
                        case 4:
                            builder.setSeekTime(input.readInt64());
                            break;
                        case 5:
                            builder.setReplaySpeed(input.mergeObject(org.yamcs.protobuf.Yamcs.ReplaySpeed.newBuilder(), org.yamcs.protobuf.SchemaYamcs.ReplaySpeed.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.ProcessorRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.YamcsManagement.ProcessorRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.YamcsManagement.ProcessorRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.ProcessorRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.ProcessorRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.ProcessorRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.ProcessorRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.ProcessorRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.ProcessorRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.ProcessorRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "operation";
                case 2: return "instance";
                case 3: return "name";
                case 4: return "seekTime";
                case 5: return "replaySpeed";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("operation", 1);
            fieldMap.put("instance", 2);
            fieldMap.put("name", 3);
            fieldMap.put("seekTime", 4);
            fieldMap.put("replaySpeed", 5);
        }
    }

    public static final class LinkInfo
    {
        public static final org.yamcs.protobuf.SchemaYamcsManagement.LinkInfo.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaYamcsManagement.LinkInfo.MessageSchema();
        public static final org.yamcs.protobuf.SchemaYamcsManagement.LinkInfo.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaYamcsManagement.LinkInfo.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.LinkInfo>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.LinkInfo message) throws java.io.IOException
            {
                if(message.hasInstance())
                    output.writeString(1, message.getInstance(), false);
                if(message.hasName())
                    output.writeString(2, message.getName(), false);
                if(message.hasType())
                    output.writeString(3, message.getType(), false);
                if(message.hasSpec())
                    output.writeString(4, message.getSpec(), false);
                if(message.hasStream())
                    output.writeString(5, message.getStream(), false);
                if(message.hasDisabled())
                    output.writeBool(6, message.getDisabled(), false);
                if(message.hasStatus())
                    output.writeString(7, message.getStatus(), false);
                if(message.hasDataCount())
                    output.writeInt64(8, message.getDataCount(), false);
                if(message.hasDetailedStatus())
                    output.writeString(9, message.getDetailedStatus(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.LinkInfo message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.LinkInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.LinkInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.LinkInfo> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.LinkInfo.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.LinkInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.LinkInfo.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.LinkInfo message) throws java.io.IOException {}
            public org.yamcs.protobuf.YamcsManagement.LinkInfo newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.LinkInfo.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.LinkInfo.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setInstance(input.readString());
                            break;
                        case 2:
                            builder.setName(input.readString());
                            break;
                        case 3:
                            builder.setType(input.readString());
                            break;
                        case 4:
                            builder.setSpec(input.readString());
                            break;
                        case 5:
                            builder.setStream(input.readString());
                            break;
                        case 6:
                            builder.setDisabled(input.readBool());
                            break;
                        case 7:
                            builder.setStatus(input.readString());
                            break;
                        case 8:
                            builder.setDataCount(input.readInt64());
                            break;
                        case 9:
                            builder.setDetailedStatus(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.LinkInfo.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.YamcsManagement.LinkInfo.Builder newMessage()
            {
                return org.yamcs.protobuf.YamcsManagement.LinkInfo.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.LinkInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.LinkInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.LinkInfo.Builder> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.LinkInfo.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.LinkInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.LinkInfo.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.LinkInfo.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "instance";
                case 2: return "name";
                case 3: return "type";
                case 4: return "spec";
                case 5: return "stream";
                case 6: return "disabled";
                case 7: return "status";
                case 8: return "dataCount";
                case 9: return "detailedStatus";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("instance", 1);
            fieldMap.put("name", 2);
            fieldMap.put("type", 3);
            fieldMap.put("spec", 4);
            fieldMap.put("stream", 5);
            fieldMap.put("disabled", 6);
            fieldMap.put("status", 7);
            fieldMap.put("dataCount", 8);
            fieldMap.put("detailedStatus", 9);
        }
    }

    public static final class LinkEvent
    {
        public static final org.yamcs.protobuf.SchemaYamcsManagement.LinkEvent.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaYamcsManagement.LinkEvent.MessageSchema();
        public static final org.yamcs.protobuf.SchemaYamcsManagement.LinkEvent.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaYamcsManagement.LinkEvent.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.LinkEvent>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.LinkEvent message) throws java.io.IOException
            {
                if(message.hasType())
                    output.writeString(1, message.getType().name(), false);
                if(message.hasLinkInfo())
                    output.writeObject(2, message.getLinkInfo(), org.yamcs.protobuf.SchemaYamcsManagement.LinkInfo.WRITE, false);

            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.LinkEvent message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.LinkEvent.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.LinkEvent.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.LinkEvent> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.LinkEvent.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.LinkEvent.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.LinkEvent.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.LinkEvent message) throws java.io.IOException {}
            public org.yamcs.protobuf.YamcsManagement.LinkEvent newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.YamcsManagement.LinkEvent.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.YamcsManagement.LinkEvent.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setType(org.yamcs.protobuf.YamcsManagement.LinkEvent.Type.valueOf(input.readString()));
                            break;
                        case 2:
                            builder.setLinkInfo(input.mergeObject(org.yamcs.protobuf.YamcsManagement.LinkInfo.newBuilder(), org.yamcs.protobuf.SchemaYamcsManagement.LinkInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.YamcsManagement.LinkEvent.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.YamcsManagement.LinkEvent.Builder newMessage()
            {
                return org.yamcs.protobuf.YamcsManagement.LinkEvent.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.LinkEvent.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaYamcsManagement.LinkEvent.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.YamcsManagement.LinkEvent.Builder> typeClass()
            {
                return org.yamcs.protobuf.YamcsManagement.LinkEvent.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.YamcsManagement.LinkEvent.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.YamcsManagement.LinkEvent.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.YamcsManagement.LinkEvent.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "type";
                case 2: return "linkInfo";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("type", 1);
            fieldMap.put("linkInfo", 2);
        }
    }

}
